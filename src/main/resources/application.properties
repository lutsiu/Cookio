spring.application.name=Cookio

spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
server.error.whitelabel.enabled=false
server.error.path=/error


spring.main.banner-mode=off

logging.level.root=warn

logging.level.org.hibernate.SQL=trace
logging.level.org.hibernate.orm.jdbc.bind=trace



spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=nodetest2023@gmail.com
spring.mail.password=gsycalfxuuafhgxz 
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


spring.datasource.url=${SQL_URL}
spring.datasource.username=${SQL_USER}
spring.datasource.password=${SQL_PASSWORD}

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}

spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_SECRET}

spring:
  security:
    oauth2:
    client:
      registration:
        github:
          clientId: ${GITHUB_CLIENT}
          clientSecret: ${GITHUB_SECRET}
          scope: read:user
          redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
        google:
          clientId: ${GOOGLE_CLIENT}
          clientSecret: ${GOOGLE_SECRET}
          scope: email, profile
          redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"


